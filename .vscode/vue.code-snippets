{
    // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and \${1:label}, \${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "template": {
    //     "scope": "vue",
    //     "prefix": "template",
    //     "body": [
    //         "<template>",
    //         "  $1",
    //         "</template>"
    //     ],
    //     "description": "Create <template> block"
    // },
    // "script": {
    //     "scope": "vue",
    //     "prefix": "script",
    //     "body": [
    //         "<script lang=\"ts\">",
    //         "import { defineComponent } from 'vue';",
    //         "",
    //         "export default defineComponent({",
    //         "  $2",
    //         "});",
    //         "</script>"
    //     ],
    //     "description": "Create <script> block"
    // },
    // "script setup": {
    //     "scope": "vue",
    //     "prefix": "script setup",
    //     "body": [
    //         "<script lang=\"ts\" setup>",
    //         "defineProps<{ $1 }>();",
    //         "</script>"
    //     ],
    //     "description": "Create <script setup> + <script> blocks"
    // },
    // "style": {
    //     "scope": "vue",
    //     "prefix": "style",
    //     "body": [
    //         "<style lang=\"scss\" scoped>",
    //         "$1",
    //         "</style>"
    //     ],
    //     "description": "Create <style> block"
    // },
    // "v-for": {
    //     "scope": "html",
    //     "prefix": "v-for",
    //     "body": [
    //         "<template v-for=\"$1 in $2\">",
    //         "  $3",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-for"
    // },
    // "v-if": {
    //     "scope": "html",
    //     "prefix": "v-if",
    //     "body": [
    //         "<template v-if=\"$1\">",
    //         "  $2",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-if"
    // },
    // "v-else-if": {
    //     "scope": "html",
    //     "prefix": "v-else-if",
    //     "body": [
    //         "<template v-else-if=\"$1\">",
    //         "  $2",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-else-if"
    // },
    // "v-else": {
    //     "scope": "html",
    //     "prefix": "v-else",
    //     "body": [
    //         "<template v-else>",
    //         "  $2",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-else"
    // }
    "vue setup component": {
		"prefix": "vue setup component",
		"body": [
			"<template>",
			"\t<div class=''>",
			"\t\t$3",
			"\t</div>",
			"</template>\n",
			"<script setup lang=\"ts\">",
			"import { ref } from 'vue'",
			"name: '$TM_FILENAME_BASE'",
      "const a = ref(1)",
            "interface Props {",
            "\tfoo?: string",
            "\tbar?: string[]",
            "}",
            "const props = withDefaults(defineProps<Props>(), {",
            "\tfoo: 'hello',",
            "\tbar: () => ['one', 'two']",
            "})",
			"const emit = defineEmits<{",
			"\t(e_name: 'emitName', e_parameter: number): void",
			"}>()",
			"\t$2",
			"</script>\n",
			"<style lang=\"scss\" scoped>",
			"\t$4",
			"</style>"
		  ],
		"description": "vue3.2.21 + setup 标签 组件模板"
	},
    "vue setup page": {
		"prefix": "vue setup page",
		"body": [
			"<template>",
			"\t<BasePage>",
			"\t\t$3",
			"\t</BasePage>",
			"</template>\n",
			"<script setup lang=\"ts\">",
			"import { ref } from 'vue'",
            "import BasePage from '@/components/BasePage.vue';",
			"name: '$TM_FILENAME_BASE'",
			"</script>\n",
			"<style lang=\"scss\" scoped>",
			"\t$4",
			"</style>"
		  ],
		"description": "vue3.2.21+ setup标签 页面模板"
	}
}
